apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aerospike-vector-search.fullname" . }}
  labels:
    app: {{ include "aerospike-vector-search.fullname" . }}
    {{- include "aerospike-vector-search.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "aerospike-vector-search.fullname" . }}
  selector:
    matchLabels:
      {{- include "aerospike-vector-search.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ .Values.aerospikeVectorSearchConfig | toString | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ include "aerospike-vector-search.fullname" . }}
        {{- include "aerospike-vector-search.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aerospike-vector-search.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{ if .Values.initContainers }}
      initContainers:
      {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and .Values.aerospikeVectorSearchConfig.service (not (empty .Values.aerospikeVectorSearchConfig.service.ports)) }}
          ports:
            {{- $svcPortCounter := 0 }}
            {{- range $port, $config := .Values.aerospikeVectorSearchConfig.service.ports }}
            - name: {{ printf "svc-%s" (default (printf "%d" $svcPortCounter) $config.name) }}
              {{- $svcPortCounter = add $svcPortCounter 1 }}
              containerPort: {{ $port }}
              protocol: {{ default "TCP" $config.protocol }}
              {{- if $config.addresses }}
              addresses: {{ $config.addresses }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if and .Values.aerospikeVectorSearchConfig.manage (not (empty .Values.aerospikeVectorSearchConfig.manage.ports)) }}
          ports:
            {{- $managePortCounter := 0 }}
            {{- range $port, $config := .Values.aerospikeVectorSearchConfig.manage.ports }}
            - name: {{ printf "manage-%s" (default (printf "%d" $managePortCounter) $config.name) }}
              {{- $managePortCounter = add $managePortCounter 1 }}
              containerPort: {{ $port }}
              protocol: {{ default "TCP" $config.protocol }}
              {{- if $config.addresses }}
              addresses: {{ $config.addresses }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if and .Values.aerospikeVectorSearchConfig.interconnect (not (empty .Values.aerospikeVectorSearchConfig.interconnect.ports)) }}
          ports:
            {{- $interconnectPortCounter := 0 }}
            {{- range $port, $config := .Values.aerospikeVectorSearchConfig.interconnect.ports }}
            - name: {{ printf "interc-%s" (default (printf "%d" $interconnectPortCounter) $config.name) }}
              {{- $interconnectPortCounter = add $interconnectPortCounter 1 }}
              containerPort: {{ $port }}
              protocol: {{ default "TCP" $config.protocol }}
              {{- if $config.addresses }}
              addresses: {{ $config.addresses }}
              {{- end }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: aerospike-vector-search-configmap
              mountPath: /etc/aerospike-vector-search/aerospike-vector-search.yml
              subPath: aerospike-vector-search.yml
              readOnly: true
            - name: aerospike-secret
              mountPath: /etc/aerospike-vector-search/secrets
              readOnly: true
            {{- if .Values.extraVolumeMounts }}
            {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default true }}
            {{- end }}
            {{- end }}
            {{- if .Values.extraSecretVolumeMounts }}
            {{- range .Values.extraSecretVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly | default true }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              port: 5040
              path: /manage/rest/v1
            initialDelaySeconds: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              port: 5040
              path: /manage/rest/v1
            initialDelaySeconds: 10
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: aerospike-vector-search-configmap
          configMap:
            name: {{ include "aerospike-vector-search.fullname" . }}
            optional: false
        - name: aerospike-secret
          secret:
            secretName: aerospike-secret
            optional: false
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
